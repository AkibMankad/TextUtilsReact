{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","filter","element","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5733ce6d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' :'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> {props.mode === 'light' ? 'Enable' :'Disable'} Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes= { title: PropTypes.string, about: PropTypes.string };\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Title text here',\r\n    aboutText: 'About text here'\r\n  };","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const hanldeOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\" , \"success\");\r\n  };\r\n  \r\n  const handleLowerClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\" , \"success\");\r\n  };\r\n\r\n  const handleCopyClick = () => {\r\n    let text = document.getElementById('myBox');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copy to Clipboard!\" , \"success\");\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Cleared text!\" , \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n    <div style={{color: props.mode === 'dark' ? 'white' :'black' }}>\r\n      <h2>{props.heading}</h2>\r\n      <textarea\r\n        className=\"form-control\"\r\n        id=\"myBox\"\r\n        rows=\"10\"\r\n        value={text}\r\n        onChange={hanldeOnChange}\r\n        style={{backgroundColor: props.mode === 'dark' ? 'grey' :'white', color: props.mode === 'dark' ? 'white' :'black' }}\r\n      ></textarea>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary my-3 mx-2\"\r\n        onClick={handleUpClick}\r\n      >\r\n        Convert to Uppercase\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary mx-2 my-2\"\r\n        onClick={handleLowerClick}\r\n      >\r\n        Convert to Lowercase\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary mx-2 my-2\"\r\n        onClick={handleCopyClick}\r\n      >\r\n        Copy Text\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary mx-2 my-2\"\r\n        onClick={handleClearClick}\r\n      >\r\n        Clear Text\r\n      </button>\r\n    </div>\r\n    <div className=\"container my-2\" style={{color: props.mode === 'dark' ? 'white' :'black'}}>\r\n\r\n     <h3>Your text Summary</h3>\r\n     <p>{text.split(' ').filter((element) => {return element.length !==0}).length} words {text.length} Charcaters</p>\r\n     <p>{(0.008 * text.split(' ').filter((element) => {return element.length !==0}).length)} Minutes to Read the text</p>\r\n     <h3>Preview of text</h3>\r\n     <p>{text.length > 0 ? text :'Enter something in the textbox to preview here'}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    \r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n","import \"./App.css\";\nimport React, {useState} from 'react'\n//import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#101434';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  }\n\n  const showAlert = (message,type)=> {\n      setAlert({\n        msg: message,\n        type: type\n      });\n\n      setTimeout(() =>{\n        setAlert(null);\n      }, 1500);\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About />} />\n            <Route exact path=\"/\" element={\n              <TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert}/>\n            } />\n          </Routes> */}\n          <TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert}/>\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}